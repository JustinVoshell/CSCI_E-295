# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = /usr/local/gtest-1.6.0

CC = gcc
CPP = g++
LEX = flex

CFLAGS += -g -Wall -Wextra 

# Flags passed to the preprocessor.
CPPFLAGS += -I$(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra

LFLAGS +=

LINK.o = $(CXX) $(LDFLAGS) $(TARGET_ARCH)
LDLIBS += -lfl -lpthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = scanner_unittest

EXECS = scanner
# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(EXECS)

test : $(TESTS)
	./scanner_unittest

clean :
	rm -f $(TESTS) $(EXECS) gtest.a gtest_main.a *.o scanner.c

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^



%.c : %.l
	$(LEX) $(LFLAGS) -o $@ $<

scanner.o : scanner.c scanner_tokens.h

scanner_tokens.o : scanner_tokens.c scanner_tokens.h

scanner_unittest.o : scanner_unittest.cpp $(GTEST_HEADERS)

scanner_unittest : scanner.o scanner_unittest.o gtest.a

scanner_main.o : scanner_main.c

scanner : scanner_main.o scanner.o scanner_tokens.o

